{"pages":[{"title":"about","text":"","link":"/about/index.html"}],"posts":[{"title":"find-majority-element-lcci","text":"数组中占比超过一半的元素称之为主要元素。给你一个 整数 数组，找出其中的主要元素。若没有，返回 -1 。请设计时间复杂度为 O(N) 、空间复杂度为 O(1) 的解决方案。 示例 1： 12输入：[1,2,5,9,5,9,5,5,5]输出：5 示例 2： 输入：[3,2]输出：-1 示例 3： 12输入：[2,2,1,1,1,2,2]输出：2 来源：力扣（LeetCode）链接：https://leetcode-cn.com/problems/find-majority-element-lcci著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。 核心思想假设存在元素a的数量超过一半,则将所有不同的元素相互抵消，剩余的那一个肯定是a.如： 12[2,2,1,1,1,2,2]-&gt; [2] 当不存在这样的元素时，也可能最后剩余的元素不符合条件，这时候就需要统计剩余元素的个数，然后判断是否超过总数的一半即可。如： 12[1,2,3]-&gt; [3] Code123456789101112131415161718192021222324class Solution {public: int majorityElement(vector&lt;int&gt;&amp; nums) { int num = nums[0], count = 1, n = nums.size(); for(int i =1; i&lt;n; i++){ if(count == 0){ num = nums[i]; count = 1; }else{ if(nums[i] != num){ count --; }else count++; } } if(count == 0) return -1; else{ count = 0; for(int nu: nums){ if(nu == num) count++; } return count*2 &gt;= n ? num:-1; } }};","link":"/2021/07/09/find-majority-element-lcci/"},{"title":"template","text":"常见的一些latex、hexo bug 或者其它的使用说明书. 1. latexlatex syntax 1.1 行内样式 inline synatx$\\hat{x}_{k}=\\hat{x}_{k}^{-}+K_{t}\\left(y_{k}\\right)$ 1.2 equation \\begin{align} & \\arg\\min_{w,b} \\frac{1}{2m}\\sum_{i=1}^m (\\hat{y_i} - y_i)^2 \\\\ & s.t \\quad \\hat{y_i}(w^x_i + b) >= 0\\\\ \\end{align} 1.3 矩阵 $$\\begin{bmatrix} {a_{11}}&{a_{12}}&{\\cdots}&{a_{1n}}\\\\ {a_{21}}&{a_{22}}&{\\cdots}&{a_{2n}}\\\\ {\\vdots}&{\\vdots}&{\\ddots}&{\\vdots}\\\\ {a_{m1}}&{a_{m2}}&{\\cdots}&{a_{mn}}\\\\ \\end{bmatrix}$$ 1.4 分母$$P(A_i \\mid B) = \\frac{P(B\\mid A)P(A_i)}{\\sum_{j=1}^{n}P(A_j)P(B \\mid A_j)}$$ 1.5 常见的希腊字符 希腊字符 latex 大写 latex｜ $\\alpha$ \\alpha $\\lambda$ \\lambda $\\Lambda$ \\Lambda $\\delta$ \\delta $\\Delta$ \\Delta $\\beta$ \\beta $\\sigma$ \\sigma $\\Sigma$ \\Sigma $\\theta$ \\theta $\\Theta$ \\Theta $\\epsilon$ \\epsilon To be continue","link":"/2021/07/06/template/"},{"title":"about","text":"","link":"/2021/07/06/about/"}],"tags":[{"name":"leetcode","slug":"leetcode","link":"/tags/leetcode/"},{"name":"algorithms","slug":"algorithms","link":"/tags/algorithms/"},{"name":"程序员面试宝典","slug":"程序员面试宝典","link":"/tags/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"},{"name":"usage","slug":"usage","link":"/tags/usage/"}],"categories":[{"name":"Daily Check","slug":"Daily-Check","link":"/categories/Daily-Check/"},{"name":"说明书","slug":"说明书","link":"/categories/%E8%AF%B4%E6%98%8E%E4%B9%A6/"}]}